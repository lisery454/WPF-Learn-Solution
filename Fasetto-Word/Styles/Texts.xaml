<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:ap="clr-namespace:Fasetto_Word.AttachedProperties"
  xmlns:converter="clr-namespace:Fasetto_Word.ValueConverters"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Style
    BasedOn="{StaticResource BaseTextBlockStyle}"
    TargetType="{x:Type TextBlock}"
    x:Key="HeaderText">
    <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Margin" Value="0,6" />
  </Style>


  <!--  Text Box  -->
  <SolidColorBrush Color="#FF7EB4EA" x:Key="TextBox.MouseOver.Border" />
  <SolidColorBrush Color="#FF569DE5" x:Key="TextBox.Focus.Border" />
  <Style BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type TextBox}">

    <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
    <Setter Property="Padding" Value="10" />
    <Setter Property="Margin" Value="0,5,0,5" />
    <Setter Property="BorderBrush" Value="{StaticResource WordBlueBrush}" />
    <Setter Property="BorderThickness" Value="0,0,0,1" />
    <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <Grid>
            <Border
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              SnapsToDevicePixels="True"
              x:Name="border">

              <ScrollViewer
                Focusable="false"
                HorizontalScrollBarVisibility="Hidden"
                VerticalScrollBarVisibility="Hidden"
                x:Name="PART_ContentHost" />
            </Border>

            <TextBlock
              FontFamily="{StaticResource LatoThin}"
              Foreground="{StaticResource ForegroundVeryDarkBrush}"
              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
              IsHitTestVisible="False"
              Padding="{TemplateBinding Padding}"
              Text="{TemplateBinding Tag}"
              VerticalAlignment="Center"
              x:Name="placeholder">
              <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                  <Setter Property="Visibility" Value="Collapsed" />
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                      <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </TextBlock.Style>
            </TextBlock>
          </Grid>


          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Opacity" TargetName="border" Value="0.56" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  Password Box  -->
  <Style BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type PasswordBox}">

    <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
    <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
    <Setter Property="Padding" Value="10" />
    <Setter Property="Margin" Value="0,5,0,5" />
    <Setter Property="BorderBrush" Value="{StaticResource WordBlueBrush}" />
    <Setter Property="BorderThickness" Value="0,0,0,1" />

    <Setter Property="ap:MonitorPasswordProperty.Value" Value="True" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">

          <Grid>

            <Border
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              SnapsToDevicePixels="True"
              x:Name="border">
              <ScrollViewer
                Focusable="False"
                HorizontalScrollBarVisibility="Hidden"
                VerticalScrollBarVisibility="Hidden"
                x:Name="PART_ContentHost" />
            </Border>

            <TextBlock
              FontFamily="{StaticResource LatoThin}"
              Foreground="{StaticResource ForegroundVeryDarkBrush}"
              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
              IsHitTestVisible="False"
              Padding="{TemplateBinding Padding}"
              Text="{TemplateBinding Tag}"
              VerticalAlignment="Center"
              Visibility="{TemplateBinding ap:HasTextProperty.Value,
                                           Converter={converter:BooleanToVisibilityConverter}}"
              x:Name="placeholder" />

          </Grid>

          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" TargetName="border" Value="0.56" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
              <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  Spinning Text  -->
  <Style
    BasedOn="{StaticResource BaseTextBlockStyle}"
    TargetType="{x:Type TextBlock}"
    x:Key="SpinningText">
    <Style.Resources>
      <Storyboard x:Key="Spin">
        <DoubleAnimation
          Duration="0:0:2"
          From="0"
          RepeatBehavior="Forever"
          Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
          To="360" />
      </Storyboard>
    </Style.Resources>
    <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
    <Setter Property="Text" Value="&#xf110;" />
    <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
    <Setter Property="RenderTransform">
      <Setter.Value>
        <RotateTransform />
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" Value="True">
        <DataTrigger.EnterActions>
          <BeginStoryboard Name="SpinStoryboard" Storyboard="{StaticResource Spin}" />
        </DataTrigger.EnterActions>
        <DataTrigger.ExitActions>
          <RemoveStoryboard BeginStoryboardName="SpinStoryboard" />
        </DataTrigger.ExitActions>
      </DataTrigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>