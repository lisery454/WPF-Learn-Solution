<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:ap="clr-namespace:Fasetto_Word.AttachedProperties"
  xmlns:converter="clr-namespace:Fasetto_Word.ValueConverters"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Colors.xaml" />
    <ResourceDictionary Source="Fonts.xaml" />
    <ResourceDictionary Source="Texts.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!--  Hoverless  -->
  <Style TargetType="{x:Type Button}" x:Key="Hoverless">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  SystemIconButton  -->
  <Style
    BasedOn="{StaticResource Hoverless}"
    TargetType="{x:Type Button}"
    x:Key="SystemIconButton">
    <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
    <Setter Property="Padding" Value="10" />
  </Style>

  <!--  WindowControlButton  -->
  <Style
    BasedOn="{StaticResource BaseStyle}"
    TargetType="{x:Type Button}"
    x:Key="WindowControlButton">
    <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Padding" Value="8" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="LayoutTransform">
      <Setter.Value>
        <ScaleTransform ScaleX="1.5" />
      </Setter.Value>
    </Setter>

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
            <TextBlock
              HorizontalAlignment="Center"
              Text="{TemplateBinding Content}"
              VerticalAlignment="Center" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <!--  WindowControlButton  -->
  <Style
    BasedOn="{StaticResource WindowControlButton}"
    TargetType="{x:Type Button}"
    x:Key="WindowCloseButton">
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="Red" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <!--  Regular Button  -->
  <Style BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type Button}">
    <Setter Property="Background" Value="{StaticResource WordOrangeBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}" />
    <Setter Property="FontFamily" Value="{StaticResource LatoBold}" />
    <Setter Property="Padding" Value="50,10" />
    <Setter Property="Margin" Value="0,10" />
    <Setter Property="ap:IsBusyProperty.Value" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="10"
            SnapsToDevicePixels="true"
            x:Name="border">
            <Grid>
              <TextBlock
                Focusable="False"
                FontFamily="{TemplateBinding FontFamily}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="{TemplateBinding Padding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                Text="{TemplateBinding Content}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Visibility="{TemplateBinding ap:IsBusyProperty.Value,
                                             Converter={converter:BooleanToVisibilityConverter}}" />
              <TextBlock
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Style="{StaticResource SpinningText}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Visibility="{TemplateBinding ap:IsBusyProperty.Value,
                                             Converter={converter:BooleanToVisibilityConverter},
                                             ConverterParameter=true_visible}" />

            </Grid>

          </Border>
          <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
              <BeginStoryboard>
                <Storyboard>
                  <ColorAnimation
                    Duration="0:0:0.3"
                    Storyboard.TargetName="border"
                    Storyboard.TargetProperty="Background.Color"
                    To="{StaticResource WordBlue}" />
                </Storyboard>
              </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
              <BeginStoryboard>
                <Storyboard>
                  <ColorAnimation
                    Duration="0:0:0.3"
                    Storyboard.TargetName="border"
                    Storyboard.TargetProperty="Background.Color"
                    To="{StaticResource WordOrange}" />
                </Storyboard>
              </BeginStoryboard>
            </EventTrigger>

            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Background" TargetName="border" Value="{StaticResource ForegroundDarkBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  Text Button  -->
  <Style
    BasedOn="{StaticResource BaseStyle}"
    TargetType="{x:Type Button}"
    x:Key="TextButton">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
    <Setter Property="FontFamily" Value="{StaticResource LatoBold}" />
    <Setter Property="Padding" Value="50,10" />
    <Setter Property="Margin" Value="0,10" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="10"
            SnapsToDevicePixels="true"
            x:Name="border">
            <TextBlock
              Focusable="False"
              FontFamily="{TemplateBinding FontFamily}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              Margin="{TemplateBinding Padding}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
              Text="{TemplateBinding Content}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Foreground" Value="{StaticResource WordOrangeBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>